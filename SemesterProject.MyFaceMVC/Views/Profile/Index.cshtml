@model UserPostsWithPostToAdd

@{
    ViewData["Title"] = "Profile";
}

<h3 class="text-center text-white">@User.Claims.FirstOrDefault(x => x.Type == "FirstName").Value @User.Claims.FirstOrDefault(x => x.Type == "LastName").Value</h3>


<div class="col-12 border pt-3 bg-white">
    <form asp-controller="Post" asp-action="AddPost" method="post" class="form-group col-12" enctype="multipart/form-data">
        <div class="input-group">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <textarea class="form-control bg-light" type="text" asp-for="@Model.NewPost.Text" rows="1" style="height:3em;" id="text"></textarea>

            <span asp-validation-for="NewPost" class="text-danger"></span>

            <div class="btn-group">
                <div class="image-upload input-group-append ">
                    <label for="file-input">
                        <i class="far fa-images fa-2x mt-2 mx-1"></i>
                        
                    </label>
                    <input asp-for="@Model.NewPost.Picture" id="file-input" />
                </div>
             
                <div class="input-group-append">
                    <button type="submit" class="btn btn-sm btn-success"><i class="fas fa-plus"></i></button>
                </div>
            </div>
        </div>
    </form>

</div>

<div class="col-12  p-3 mt-3 bg-white">
    <form>

        @foreach (var post in Model.Posts)
        {
        <div class="mb-5 text-center">

            @if (!string.IsNullOrEmpty(post.ImagePath))
            {
                var imagePath = $"/Image/{post.ImagePath}";
                <div class="col-12">
                    <img src="@imagePath" width="400" />
                </div>
            }

            <div class="col-12 border border-primary h-auto text-justify bg-light py-2">@post.Text</div>

            <div class="btn-toolbar justify-content-between row col-12 bg-light ml-sm-2">

                <div class="mt-1 small pl-3 pt-1 ">@post.WhenAdded</div>

                <div class="btn-group bg-light">

                    <button class="btn border" type="button">
                        <span class="badge badge-light btn"> <i class="far fa-thumbs-up fa-lg"></i> @post.PostLikes.Count</span>
                    </button>

                    <button asp-controller="Post" asp-action="ShowComments" asp-route-userId="@ViewData["userId"]" asp-route-postId="@post.Id.ToString()" class="btn border">
                        <span class="badge badge-light"><i class="far fa-comments fa-lg"></i> @post.PostComments.Count</span>
                    </button>

                    <button asp-controller="Post" asp-action="EditPost" asp-route-userId="@ViewData["userId"]" asp-route-postId="@post.Id.ToString()" class="btn border">
                        <i class="fas fa-edit fa-align-center"></i>
                    </button>

                    <button asp-controller="Post" asp-action="DeletePost" asp-route-id="@post.Id.ToString()" class="btn btn-danger border">
                        <i class="fas fa-trash-alt fa-adjust"></i>
                    </button>
                </div>
            </div>
        </div>
        }

    </form>
</div>
<script>
    var observe;
    if (window.attachEvent) {
        observe = function (element, event, handler) {
            element.attachEvent('on' + event, handler);
        };
    }
    else {
        observe = function (element, event, handler) {
            element.addEventListener(event, handler, false);
        };
    }
    function init() {
        var text = document.getElementById("text");
        function resize() {
            text.style.height = 'auto';
            text.style.height = text.scrollHeight + 'px';
        }
        /* 0-timeout to get the already changed text */
        function delayedResize() {
            window.setTimeout(resize, 0);
        }
        observe(text, 'change', resize);
        observe(text, 'cut', delayedResize);
        observe(text, 'paste', delayedResize);
        observe(text, 'drop', delayedResize);
        observe(text, 'keydown', delayedResize);

        text.focus();
        text.select();
        resize();
    }
</script>
<script>


</script>